@use 'sass:string';
@use 'sass:map';
@use 'sass:list';
@use 'sass:color';
@use './function' as func;

@mixin size($width, $height: null) {
  width: $width;
  height: $height;
}

@mixin display(
  $display: flex,
  $direction,
  $align-items,
  $justify-content,
) {
  display: $display; // 기본값 설정
  flex-direction: $direction;
  align-items: $align-items;
  justify-content: $justify-content;
}

@mixin default-style($border-radius, $background, $z-index) {
  border-radius: $border-radius;
  background: $background;
  z-index: $z-index;
}

@mixin position($top, $bottom, $right, $left, $position: absolute) {
  top: $top;
  bottom: $bottom;
  right: $right;
  left: $left;
  position: $position;
}

@mixin font($font-size, $font-weight, $line-height, $font-family) {
  font-size: $font-size;
  font-weight: $font-weight;
  line-height: $line-height;
  font-family: $font-family;
}

@mixin fontSize-line-height($font-size, $line-height) {
  font-size: $font-size;
  line-height: $line-height;
}

// Grid Box
@mixin gridbox($column-count, $column-gap: 20px, $row-gap: null) {
  $row-gap: if($row-gap == null, $column-gap, $row-gap);

  display: grid;
  grid-template-columns: repeat($column-count, 1fr);
  gap: $row-gap $column-gap;
}

@mixin grid-column-start($number) {
  grid-column-start: $number;
}

@mixin grid-row-start($number) {
  grid-row-start: $number;
}

@mixin grid-column-span($count) {
  grid-column-end: span $count;
}

@mixin grid-row-span($count) {
  grid-row-end: span $count;
}

